{"pages":[],"posts":[{"title":"SpringCloud 入门","text":"","link":"/2019/09/14/SpringCloud-入门/"},{"title":"ReactJS 入门","text":"1. 安装1$ cnpm install react react-cli 2. 初始化项目2.1 Create React App官方页面说create-react-app适用于学习react及创建简易项目： Create React App is a comfortable environment for learning React, and is the best way to start building a new single-page application in React. npx1$ npx create-react-app react-demo 运行时间相对vue.js初始化较长，完成后react-demo文件夹大小为202M。 npm1$ npm init react-app react-demo yarn1$ yarn create react-app react-demo 2.2 Next.js2.3 Gatsby3. 基本命令1234$ yarn start // 本地运行$ yarn build // 编译生成静态文件$ yarn test $ yarn eject // ? 关于yarn eject的说明： Removes this tool and copies build dependencies, configuration files and scripts into the app directory. 4. 架构(vs Vue.js) React Vue 架构 V (MVC) VM (MVVM) view JSX html + js ? 数据绑定 单向数据流 双向数据流 移动端原生应用 React Native - 5. Hello World例子 hello world极简例子的文件组成 12345.├── package.json├── src│ ├── App.js│ ├── index.js package.json 12345678910111213141516{ \"name\": \"react-demo\", \"version\": \"0.1.0\", \"private\": true, \"dependencies\": { \"react\": \"^16.9.0\", \"react-dom\": \"^16.9.0\", \"react-scripts\": \"3.1.1\" }, \"scripts\": { \"start\": \"react-scripts start\", \"build\": \"react-scripts build\", \"test\": \"react-scripts test\", \"eject\": \"react-scripts eject\" },} index.js 12345import React from &apos;react&apos;;import ReactDOM from &apos;react-dom&apos;;import App from &apos;./App&apos;;ReactDOM.render(&lt;App /&gt;, document.getElementById(&apos;root&apos;)); App.js 1234567891011import React from &apos;react&apos;;function App() { return ( &lt;div className=&quot;App&quot;&gt; Hello world! &lt;/div&gt; );}export default App; 6. 路由机制例子 文件目录 123456.├── package.json├── src│ ├── App.js│ ├── World.js│ ├── index.js index.js 同Hello World例子 App.js 12345678910111213141516import React from &apos;react&apos;;import { BrowserRouter as Router, Route } from &apos;react-router-dom&apos;;import World from &apos;./components/World&apos;;function App() { return ( &lt;div className=&quot;App&quot;&gt; &lt;Router&gt; &lt;Route path=&quot;/hello&quot; component={ World }&gt;&lt;/Route&gt; &lt;/Router&gt; &lt;/div&gt; );}export default App; World.js 1234567891011import React from &apos;react&apos;;function World() { return ( &lt;div&gt; Hello world! &lt;/div&gt; );}export default World; . JSX语法糖. React + TypeScript. VSCode 插件 Reactjs code snippets React native … . tips 版本问题：react-router / react-router-dom","link":"/2019/09/15/ReactJS-入门/"},{"title":"github pages + hexo","text":"安装hexo1$ cnpm install hexo-cli -g 初始化博客1$ hexo init \"hexo-demo\" 新建post1$ hexo new post \"hexo-new-post\" 在hexo-demo/source/_posts下将会生成名为hexo-new-post.md的文件，可用markdown工具进行编辑。 绑定Githubgithub新建pages项目 在github中新建名为{username}.github.io的项目，其中，二级域名必须与github用户名相同，否则将导致访问404。 github中上传localhost的ssh公钥。 编辑hexo _config.yml文件1$ vi ./_config.yml 其中deploy部分修改为： 1234deploy: type: git repository: git@github.com:{username}/{username}.github.io.git branch: master 安装必要插件1$ cnpm install hexo-deployer-git --save 生成静态文件1$ hexo g 部署至Github1$ hexo d 至此，一般在三分钟左右，访问{username}.github.io，即可看到新生成的文章。","link":"/2019/09/13/github-pages-hexo/"}],"tags":[{"name":"react","slug":"react","link":"/tags/react/"},{"name":"github pages hexo","slug":"github-pages-hexo","link":"/tags/github-pages-hexo/"}],"categories":[]}